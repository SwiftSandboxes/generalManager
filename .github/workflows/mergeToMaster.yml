# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    branches:
      - master
      - main

jobs:
# run sonar before Docker to double check that coverage looks good after merge to main/master
  sonar:
      name: SonarCloud Scan & Docker Push
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
          with:
            fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
        - name: Set up JDK 11
          uses: actions/setup-java@v3
          with:
            distribution: zulu
            java-version: 11.0.16
        - name: Cache SonarCloud packages
          uses: actions/cache@v1
          with:
            path: ~/.sonar/cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar
        - name: Cache Maven packages
          uses: actions/cache@v1
          with:
            path: ~/.m2
            key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
            restore-keys: ${{ runner.os }}-m2
        - name: Build and analyze
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=SwiftSandboxes_generalManager -Dsonar.qualitygate.wait=true
        # clean just to ensure anything left over from sonar scan doesn't muddy the docker push
        - name: Maven Install
          run: mvn -B clean install -DskipTests
        - name: Login & Push to Docker Hub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKERHUBUSERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        - shell: bash
          env:
            DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUBUSERNAME }}
          run: |
            mvn clean deploy -B jib:build -P deploy-docker -DdockerHubUsername="$DOCKERHUB_USERNAME" -DskipTests
